#Quiz 1
Fork this repository to your GitHub account.
(this is done online)

Clone your forked repository to your local machine using the command line.
git clone https://github.com/LisaBlackmer/qtm350-quiz01.git

Change directory into the cloned repository.
cd qtm350-quiz01

Create a file named commands.txt (or command.ipynb) in the root of the repository to document all commands used throughout the project.
touch commands.txt

Create and switch to a new branch named feature-update.
git branch feature-update
git checkout feature-update

Create a new directory called reports within the repository.
mkdir reports

Inside the reports directory, create an empty file named summary.md using the command line.
touch reports/summary.md

Use a command to add the following line to summary.md: This document provides a summary of the project updates.
echo "This document provides a summary of the project updates." > reports/summary.md

Add the newly created reports directory.
git add reports

Commit the changes with the message "Add reports directory".
git commit -m "Add reports directory"

Create three empty text files named file1.txt, file2.txt, and file3.txt in the reports folder using a single command with brace expansion.
touch reports/file{1..3}.txt

Rename the file data/raw-data.csv to data/input-data.csv.
mv data/raw-data.csv data/input-data.csv

Create a new directory named backup inside the scripts directory, then copy all .py files from the scripts directory to the newly created backup directory. Use wildcards to copy the files and chain both commands in a single line of code.
mkdir scripts/backup && cp scripts/*.py scripts/backup

Delete the docs/documentation.md file.
rm docs/documentation.md

Stage and commit all changes so far. Add the message "Update project files".
git add .
git commit -m "Update project files"

Create a new file named .gitignore in the root of the repository.
touch .gitignore

Add the following lines to .gitignore using the command line:
temp/
echo "temp/" > .gitignore

dataset0?.csv
echo "dataset0?.csv" >> .gitignore

Read the contents of your .gitignore file using the command line.
cat .gitignore

Stage and commit the .gitignore file with the message "Add .gitignore file". Use only one line to do both.
git add .gitignore && git commit -m "Add .gitignore file"

Switch back to the main branch and merge the feature-update branch into main.
git checkout main
git merge feature-update

Update the commands.txt file with all commands used so far, stage the file, commit it with a descriptive message, and push all changes to your forked GitHub repository
...and you're done! ðŸ˜Š
